<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<svg width="100%" height="100%"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   version="1.1"
   onload="startUp()"
   onresize="resize()">

<script>

<![CDATA[

var xmlns="http://www.w3.org/2000/svg";
var xlinkns = "http://www.w3.org/1999/xlink"; 

object = new Array()
 
var nw = nh = 0;
var Nbubble = 4 ;
var rLimit = 100;
var fsLimit = 40;

var loopCount  = 0;
var loopLimit  = 6;

var timerId = null;

function startUp() 
{
  resize();

  for(i=0;i<Nbubble;i++) {
   	object[i] = new makeSphere(i);
  }

  object[0] = new makeSphere(0,200,"Testing");
  object[1] = new makeSphere(1,140,"Prototypes");
  object[2] = new makeSphere(2, 80,"Research");
  object[3] = new makeSphere(3,  0,"Ideas");

  timerId = setInterval(moveSpheres,60)
}


function moveSpheres()
{
    for (i in object) {
        object[i].moveSphere();
    }
}

function makeSphere(N,hue,label)
{
        this.label = label;

        this.trans_group = document.createElementNS(xmlns,"g");
        this.scale_group = document.createElementNS(xmlns,"g");

	this.bubble = document.createElementNS(xmlns,"circle");

        this.text   = document.createElementNS(xmlns,"text");
        var textNode = document.createTextNode(label);
        this.text.appendChild(textNode);
        this.text.setAttributeNS(null,"fill","hsl("+hue+",100%,40%)");

        var bubble_group_elem = document.getElementById("GroupOfBubbles");
	bubble_group_elem.appendChild(this.trans_group);
	this.trans_group.appendChild(this.scale_group);

	this.scale_group.appendChild(this.bubble);
 	this.scale_group.appendChild(this.text);
 
	this.r = (N * rLimit / Nbubble);
	this.x = rLimit + Math.random() * (nw - 2*rLimit);
	this.y = rLimit + Math.random() * (nh - 2*rLimit);

  	this.moveSphere = function(){
    	with(this){
			if (r >= rLimit*2){
				loopCount++;

                                x = rLimit + Math.random() * (nw - 2*rLimit);
				y = rLimit + Math.random() * (nh - 2*rLimit);
				r = 0;
			}

			r += 2;
   
          var rScale = Math.min(r,rLimit) / rLimit;
          var tOpacity = (r<=rLimit) ? r/rLimit : 2.0-r/rLimit;

          if (label == "Ideas") {
             rScale = rScale + rScale * (loopCount/loopLimit);
          }

          scale_group.setAttributeNS(null,"transform","scale(" + rScale + ")");
          trans_group.setAttributeNS(null,"transform","translate(" + x +","+ y + ")");

          bubble.setAttributeNS(null,"cx",0);
          bubble.setAttributeNS(null,"cy",0);
          bubble.setAttributeNS(null,"r",rLimit);
          bubble.setAttributeNS(null,"fill","url(#hue" + hue + ")");
          bubble.setAttributeNS(null,"opacity",(rLimit - r) / rLimit);

          var text_bbox = text.getBBox();
          text.setAttributeNS(null,"x",-text_bbox.width/2);
          text.setAttributeNS(null,"y",0 );
          text.setAttributeNS(null,"opacity",tOpacity);
          text.setAttributeNS(null,"font-size",fsLimit);


          if (loopCount>=loopLimit) {
              stopAnnimation();
          }
    } // End of 'with'
  } // End of moveSphere()

}

function skipAnnimationEnd()
{
   // really it's a speed up of the annimation focussing in 'Idea'

   clearInterval(timerId);
   loopCount = loopLimit;

   timerId = setInterval("object[3].moveSphere()",40)
}


function stopAnnimation()
{
    clearInterval(timerId);
    top.stopBubbleAnnimationEnd(2000);
}

function resize()
{
     	nw  = window.innerWidth;
	nh  = window.innerHeight;
}


]]>

</script>

<defs>
 <radialGradient id="hue200" cx="20%" cy="20%" r="100%" fx="30%" fy="30%" >
   <stop stop-color="#ffffff"            offset="0"    stop-opacity="0.5"/>
   <stop stop-color="hsl(200,100%, 80%)" offset="20%"  stop-opacity="0.5"/>
   <stop stop-color="hsl(200,100%, 40%)" offset="80%"  stop-opacity="0.5"/>
   <stop stop-color="hsl(200,100%, 20%)" offset="100%" stop-opacity="0.5"/>
 </radialGradient>
 <radialGradient id="hue140" cx="20%" cy="20%" r="100%" fx="30%" fy="30%" >
   <stop stop-color="#ffffff"            offset="0"    stop-opacity="0.5"/>
   <stop stop-color="hsl(100,100%, 80%)" offset="20%"  stop-opacity="0.5"/>
   <stop stop-color="hsl(100,100%, 40%)" offset="80%"  stop-opacity="0.5"/>
   <stop stop-color="hsl(100,100%, 20%)" offset="100%" stop-opacity="0.5"/>
 </radialGradient>
 <radialGradient id="hue80" cx="20%" cy="20%" r="100%" fx="30%" fy="30%" >
   <stop stop-color="#ffffff"           offset="0"    stop-opacity="0.5"/>
   <stop stop-color="hsl(80,100%, 80%)" offset="20%"  stop-opacity="0.5"/>
   <stop stop-color="hsl(80,100%, 40%)" offset="80%"  stop-opacity="0.5"/>
   <stop stop-color="hsl(80,100%, 20%)" offset="100%" stop-opacity="0.5"/>
 </radialGradient>
 <radialGradient id="hue0" cx="20%" cy="20%" r="100%" fx="30%" fy="30%" >
   <stop stop-color="#ffffff" offset="0"    stop-opacity="0.8"/>
   <stop stop-color="#CC8080" offset="20%"  stop-opacity="0.8"/>
   <stop stop-color="#CC0000" offset="80%"  stop-opacity="0.8"/>
   <stop stop-color="#CC0000" offset="100%" stop-opacity="0.8"/>
 </radialGradient>
</defs>

<rect height="100%" width="100%" fill="white"/>



<g id="GroupOfBubbles">
<!-- group to put in dynamically changing bubbles -->
</g>

  <svg>
    <text x="520" y="480" fill="black" style="font-size: 30px;" onclick="skipAnnimationEnd()">Skip &#x203A;</text>
  </svg>
</svg>


